// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cproto.proto
// Protobuf C++ Version: 5.29.3

#ifndef cproto_2eproto_2epb_2eh
#define cproto_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cproto_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cproto_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cproto_2eproto;
class GetVersionResponse;
struct GetVersionResponseDefaultTypeInternal;
extern GetVersionResponseDefaultTypeInternal _GetVersionResponse_default_instance_;
class ListComponentsResponse;
struct ListComponentsResponseDefaultTypeInternal;
extern ListComponentsResponseDefaultTypeInternal _ListComponentsResponse_default_instance_;
class LoadSolutionRequest;
struct LoadSolutionRequestDefaultTypeInternal;
extern LoadSolutionRequestDefaultTypeInternal _LoadSolutionRequest_default_instance_;
class RequestEnvelope;
struct RequestEnvelopeDefaultTypeInternal;
extern RequestEnvelopeDefaultTypeInternal _RequestEnvelope_default_instance_;
class ResponseEnvelope;
struct ResponseEnvelopeDefaultTypeInternal;
extern ResponseEnvelopeDefaultTypeInternal _ResponseEnvelope_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ID : int {
  NONE = 0,
  SHUTDOWN = 1,
  GET_VERSION = 2,
  LOAD_PACKS = 3,
  LOAD_SOLUTION = 4,
  LIST_COMPONENTS = 5,
  ID_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ID_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ID_IsValid(int value);
extern const uint32_t ID_internal_data_[];
constexpr ID ID_MIN = static_cast<ID>(0);
constexpr ID ID_MAX = static_cast<ID>(5);
constexpr int ID_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ID_descriptor();
template <typename T>
const std::string& ID_Name(T value) {
  static_assert(std::is_same<T, ID>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ID_Name().");
  return ID_Name(static_cast<ID>(value));
}
template <>
inline const std::string& ID_Name(ID value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ID_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ID_Parse(absl::string_view name, ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ID>(
      ID_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ResponseEnvelope final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ResponseEnvelope) */ {
 public:
  inline ResponseEnvelope() : ResponseEnvelope(nullptr) {}
  ~ResponseEnvelope() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResponseEnvelope* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResponseEnvelope));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResponseEnvelope(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResponseEnvelope(const ResponseEnvelope& from) : ResponseEnvelope(nullptr, from) {}
  inline ResponseEnvelope(ResponseEnvelope&& from) noexcept
      : ResponseEnvelope(nullptr, std::move(from)) {}
  inline ResponseEnvelope& operator=(const ResponseEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseEnvelope& operator=(ResponseEnvelope&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResponseEnvelope& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResponseEnvelope* internal_default_instance() {
    return reinterpret_cast<const ResponseEnvelope*>(
        &_ResponseEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ResponseEnvelope& a, ResponseEnvelope& b) { a.Swap(&b); }
  inline void Swap(ResponseEnvelope* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponseEnvelope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResponseEnvelope* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResponseEnvelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResponseEnvelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResponseEnvelope& from) { ResponseEnvelope::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResponseEnvelope* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ResponseEnvelope"; }

 protected:
  explicit ResponseEnvelope(::google::protobuf::Arena* arena);
  ResponseEnvelope(::google::protobuf::Arena* arena, const ResponseEnvelope& from);
  ResponseEnvelope(::google::protobuf::Arena* arena, ResponseEnvelope&& from) noexcept
      : ResponseEnvelope(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 2,
    kErrorFieldNumber = 4,
    kIdFieldNumber = 1,
    kStatusFieldNumber = 3,
  };
  // bytes payload = 2;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // string error = 4;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // .ID id = 1;
  void clear_id() ;
  ::ID id() const;
  void set_id(::ID value);

  private:
  ::ID _internal_id() const;
  void _internal_set_id(::ID value);

  public:
  // bool status = 3;
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ResponseEnvelope)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      30, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResponseEnvelope& from_msg);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    int id_;
    bool status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cproto_2eproto;
};
// -------------------------------------------------------------------

class RequestEnvelope final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RequestEnvelope) */ {
 public:
  inline RequestEnvelope() : RequestEnvelope(nullptr) {}
  ~RequestEnvelope() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RequestEnvelope* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RequestEnvelope));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestEnvelope(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestEnvelope(const RequestEnvelope& from) : RequestEnvelope(nullptr, from) {}
  inline RequestEnvelope(RequestEnvelope&& from) noexcept
      : RequestEnvelope(nullptr, std::move(from)) {}
  inline RequestEnvelope& operator=(const RequestEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestEnvelope& operator=(RequestEnvelope&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestEnvelope& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestEnvelope* internal_default_instance() {
    return reinterpret_cast<const RequestEnvelope*>(
        &_RequestEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RequestEnvelope& a, RequestEnvelope& b) { a.Swap(&b); }
  inline void Swap(RequestEnvelope* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestEnvelope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestEnvelope* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RequestEnvelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestEnvelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestEnvelope& from) { RequestEnvelope::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RequestEnvelope* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "RequestEnvelope"; }

 protected:
  explicit RequestEnvelope(::google::protobuf::Arena* arena);
  RequestEnvelope(::google::protobuf::Arena* arena, const RequestEnvelope& from);
  RequestEnvelope(::google::protobuf::Arena* arena, RequestEnvelope&& from) noexcept
      : RequestEnvelope(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // bytes payload = 2;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // .ID id = 1;
  void clear_id() ;
  ::ID id() const;
  void set_id(::ID value);

  private:
  ::ID _internal_id() const;
  void _internal_set_id(::ID value);

  public:
  // @@protoc_insertion_point(class_scope:RequestEnvelope)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestEnvelope& from_msg);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    int id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cproto_2eproto;
};
// -------------------------------------------------------------------

class LoadSolutionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:LoadSolutionRequest) */ {
 public:
  inline LoadSolutionRequest() : LoadSolutionRequest(nullptr) {}
  ~LoadSolutionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoadSolutionRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoadSolutionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadSolutionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadSolutionRequest(const LoadSolutionRequest& from) : LoadSolutionRequest(nullptr, from) {}
  inline LoadSolutionRequest(LoadSolutionRequest&& from) noexcept
      : LoadSolutionRequest(nullptr, std::move(from)) {}
  inline LoadSolutionRequest& operator=(const LoadSolutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadSolutionRequest& operator=(LoadSolutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadSolutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadSolutionRequest* internal_default_instance() {
    return reinterpret_cast<const LoadSolutionRequest*>(
        &_LoadSolutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LoadSolutionRequest& a, LoadSolutionRequest& b) { a.Swap(&b); }
  inline void Swap(LoadSolutionRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadSolutionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadSolutionRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoadSolutionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadSolutionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadSolutionRequest& from) { LoadSolutionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoadSolutionRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "LoadSolutionRequest"; }

 protected:
  explicit LoadSolutionRequest(::google::protobuf::Arena* arena);
  LoadSolutionRequest(::google::protobuf::Arena* arena, const LoadSolutionRequest& from);
  LoadSolutionRequest(::google::protobuf::Arena* arena, LoadSolutionRequest&& from) noexcept
      : LoadSolutionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContextFieldNumber = 2,
    kSolutionFieldNumber = 1,
  };
  // repeated string context = 2;
  int context_size() const;
  private:
  int _internal_context_size() const;

  public:
  void clear_context() ;
  const std::string& context(int index) const;
  std::string* mutable_context(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_context(int index, Arg_&& value, Args_... args);
  std::string* add_context();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_context(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& context() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_context();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_context() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_context();

  public:
  // string solution = 1;
  void clear_solution() ;
  const std::string& solution() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_solution(Arg_&& arg, Args_... args);
  std::string* mutable_solution();
  PROTOBUF_NODISCARD std::string* release_solution();
  void set_allocated_solution(std::string* value);

  private:
  const std::string& _internal_solution() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_solution(
      const std::string& value);
  std::string* _internal_mutable_solution();

  public:
  // @@protoc_insertion_point(class_scope:LoadSolutionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadSolutionRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> context_;
    ::google::protobuf::internal::ArenaStringPtr solution_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cproto_2eproto;
};
// -------------------------------------------------------------------

class ListComponentsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ListComponentsResponse) */ {
 public:
  inline ListComponentsResponse() : ListComponentsResponse(nullptr) {}
  ~ListComponentsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListComponentsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListComponentsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListComponentsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListComponentsResponse(const ListComponentsResponse& from) : ListComponentsResponse(nullptr, from) {}
  inline ListComponentsResponse(ListComponentsResponse&& from) noexcept
      : ListComponentsResponse(nullptr, std::move(from)) {}
  inline ListComponentsResponse& operator=(const ListComponentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListComponentsResponse& operator=(ListComponentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListComponentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListComponentsResponse* internal_default_instance() {
    return reinterpret_cast<const ListComponentsResponse*>(
        &_ListComponentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListComponentsResponse& a, ListComponentsResponse& b) { a.Swap(&b); }
  inline void Swap(ListComponentsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListComponentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListComponentsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListComponentsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListComponentsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListComponentsResponse& from) { ListComponentsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListComponentsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ListComponentsResponse"; }

 protected:
  explicit ListComponentsResponse(::google::protobuf::Arena* arena);
  ListComponentsResponse(::google::protobuf::Arena* arena, const ListComponentsResponse& from);
  ListComponentsResponse(::google::protobuf::Arena* arena, ListComponentsResponse&& from) noexcept
      : ListComponentsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentFieldNumber = 1,
  };
  // repeated string component = 1;
  int component_size() const;
  private:
  int _internal_component_size() const;

  public:
  void clear_component() ;
  const std::string& component(int index) const;
  std::string* mutable_component(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component(int index, Arg_&& value, Args_... args);
  std::string* add_component();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_component(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& component() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_component();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_component() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_component();

  public:
  // @@protoc_insertion_point(class_scope:ListComponentsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListComponentsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> component_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cproto_2eproto;
};
// -------------------------------------------------------------------

class GetVersionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetVersionResponse) */ {
 public:
  inline GetVersionResponse() : GetVersionResponse(nullptr) {}
  ~GetVersionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetVersionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetVersionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVersionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVersionResponse(const GetVersionResponse& from) : GetVersionResponse(nullptr, from) {}
  inline GetVersionResponse(GetVersionResponse&& from) noexcept
      : GetVersionResponse(nullptr, std::move(from)) {}
  inline GetVersionResponse& operator=(const GetVersionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVersionResponse& operator=(GetVersionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVersionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVersionResponse* internal_default_instance() {
    return reinterpret_cast<const GetVersionResponse*>(
        &_GetVersionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetVersionResponse& a, GetVersionResponse& b) { a.Swap(&b); }
  inline void Swap(GetVersionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVersionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVersionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetVersionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVersionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVersionResponse& from) { GetVersionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetVersionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetVersionResponse"; }

 protected:
  explicit GetVersionResponse(::google::protobuf::Arena* arena);
  GetVersionResponse(::google::protobuf::Arena* arena, const GetVersionResponse& from);
  GetVersionResponse(::google::protobuf::Arena* arena, GetVersionResponse&& from) noexcept
      : GetVersionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVersionFieldNumber = 1,
  };
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:GetVersionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVersionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cproto_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RequestEnvelope

// .ID id = 1;
inline void RequestEnvelope::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::ID RequestEnvelope::id() const {
  // @@protoc_insertion_point(field_get:RequestEnvelope.id)
  return _internal_id();
}
inline void RequestEnvelope::set_id(::ID value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:RequestEnvelope.id)
}
inline ::ID RequestEnvelope::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ID>(_impl_.id_);
}
inline void RequestEnvelope::_internal_set_id(::ID value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bytes payload = 2;
inline void RequestEnvelope::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& RequestEnvelope::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RequestEnvelope.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestEnvelope::set_payload(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RequestEnvelope.payload)
}
inline std::string* RequestEnvelope::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:RequestEnvelope.payload)
  return _s;
}
inline const std::string& RequestEnvelope::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void RequestEnvelope::_internal_set_payload(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* RequestEnvelope::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* RequestEnvelope::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RequestEnvelope.payload)
  return _impl_.payload_.Release();
}
inline void RequestEnvelope::set_allocated_payload(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:RequestEnvelope.payload)
}

// -------------------------------------------------------------------

// ResponseEnvelope

// .ID id = 1;
inline void ResponseEnvelope::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::ID ResponseEnvelope::id() const {
  // @@protoc_insertion_point(field_get:ResponseEnvelope.id)
  return _internal_id();
}
inline void ResponseEnvelope::set_id(::ID value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ResponseEnvelope.id)
}
inline ::ID ResponseEnvelope::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ID>(_impl_.id_);
}
inline void ResponseEnvelope::_internal_set_id(::ID value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bool status = 3;
inline void ResponseEnvelope::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = false;
}
inline bool ResponseEnvelope::status() const {
  // @@protoc_insertion_point(field_get:ResponseEnvelope.status)
  return _internal_status();
}
inline void ResponseEnvelope::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ResponseEnvelope.status)
}
inline bool ResponseEnvelope::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void ResponseEnvelope::_internal_set_status(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// bytes payload = 2;
inline void ResponseEnvelope::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& ResponseEnvelope::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ResponseEnvelope.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResponseEnvelope::set_payload(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ResponseEnvelope.payload)
}
inline std::string* ResponseEnvelope::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:ResponseEnvelope.payload)
  return _s;
}
inline const std::string& ResponseEnvelope::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void ResponseEnvelope::_internal_set_payload(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* ResponseEnvelope::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* ResponseEnvelope::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ResponseEnvelope.payload)
  return _impl_.payload_.Release();
}
inline void ResponseEnvelope::set_allocated_payload(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ResponseEnvelope.payload)
}

// string error = 4;
inline void ResponseEnvelope::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& ResponseEnvelope::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ResponseEnvelope.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResponseEnvelope::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ResponseEnvelope.error)
}
inline std::string* ResponseEnvelope::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:ResponseEnvelope.error)
  return _s;
}
inline const std::string& ResponseEnvelope::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void ResponseEnvelope::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* ResponseEnvelope::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* ResponseEnvelope::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ResponseEnvelope.error)
  return _impl_.error_.Release();
}
inline void ResponseEnvelope::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_.IsDefault()) {
    _impl_.error_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ResponseEnvelope.error)
}

// -------------------------------------------------------------------

// GetVersionResponse

// string version = 1;
inline void GetVersionResponse::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& GetVersionResponse::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetVersionResponse.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVersionResponse::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GetVersionResponse.version)
}
inline std::string* GetVersionResponse::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:GetVersionResponse.version)
  return _s;
}
inline const std::string& GetVersionResponse::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void GetVersionResponse::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* GetVersionResponse::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* GetVersionResponse::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GetVersionResponse.version)
  return _impl_.version_.Release();
}
inline void GetVersionResponse::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:GetVersionResponse.version)
}

// -------------------------------------------------------------------

// LoadSolutionRequest

// string solution = 1;
inline void LoadSolutionRequest::clear_solution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solution_.ClearToEmpty();
}
inline const std::string& LoadSolutionRequest::solution() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:LoadSolutionRequest.solution)
  return _internal_solution();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoadSolutionRequest::set_solution(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solution_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:LoadSolutionRequest.solution)
}
inline std::string* LoadSolutionRequest::mutable_solution() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_solution();
  // @@protoc_insertion_point(field_mutable:LoadSolutionRequest.solution)
  return _s;
}
inline const std::string& LoadSolutionRequest::_internal_solution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.solution_.Get();
}
inline void LoadSolutionRequest::_internal_set_solution(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solution_.Set(value, GetArena());
}
inline std::string* LoadSolutionRequest::_internal_mutable_solution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.solution_.Mutable( GetArena());
}
inline std::string* LoadSolutionRequest::release_solution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:LoadSolutionRequest.solution)
  return _impl_.solution_.Release();
}
inline void LoadSolutionRequest::set_allocated_solution(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.solution_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.solution_.IsDefault()) {
    _impl_.solution_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:LoadSolutionRequest.solution)
}

// repeated string context = 2;
inline int LoadSolutionRequest::_internal_context_size() const {
  return _internal_context().size();
}
inline int LoadSolutionRequest::context_size() const {
  return _internal_context_size();
}
inline void LoadSolutionRequest::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_.Clear();
}
inline std::string* LoadSolutionRequest::add_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_context()->Add();
  // @@protoc_insertion_point(field_add_mutable:LoadSolutionRequest.context)
  return _s;
}
inline const std::string& LoadSolutionRequest::context(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:LoadSolutionRequest.context)
  return _internal_context().Get(index);
}
inline std::string* LoadSolutionRequest::mutable_context(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:LoadSolutionRequest.context)
  return _internal_mutable_context()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LoadSolutionRequest::set_context(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_context()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:LoadSolutionRequest.context)
}
template <typename Arg_, typename... Args_>
inline void LoadSolutionRequest::add_context(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_context(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:LoadSolutionRequest.context)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LoadSolutionRequest::context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:LoadSolutionRequest.context)
  return _internal_context();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LoadSolutionRequest::mutable_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:LoadSolutionRequest.context)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_context();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LoadSolutionRequest::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LoadSolutionRequest::_internal_mutable_context() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.context_;
}

// -------------------------------------------------------------------

// ListComponentsResponse

// repeated string component = 1;
inline int ListComponentsResponse::_internal_component_size() const {
  return _internal_component().size();
}
inline int ListComponentsResponse::component_size() const {
  return _internal_component_size();
}
inline void ListComponentsResponse::clear_component() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_.Clear();
}
inline std::string* ListComponentsResponse::add_component() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_component()->Add();
  // @@protoc_insertion_point(field_add_mutable:ListComponentsResponse.component)
  return _s;
}
inline const std::string& ListComponentsResponse::component(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ListComponentsResponse.component)
  return _internal_component().Get(index);
}
inline std::string* ListComponentsResponse::mutable_component(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ListComponentsResponse.component)
  return _internal_mutable_component()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListComponentsResponse::set_component(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_component()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:ListComponentsResponse.component)
}
template <typename Arg_, typename... Args_>
inline void ListComponentsResponse::add_component(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_component(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ListComponentsResponse.component)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListComponentsResponse::component() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ListComponentsResponse.component)
  return _internal_component();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListComponentsResponse::mutable_component() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ListComponentsResponse.component)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_component();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListComponentsResponse::_internal_component() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListComponentsResponse::_internal_mutable_component() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.component_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ID> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ID>() {
  return ::ID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cproto_2eproto_2epb_2eh
